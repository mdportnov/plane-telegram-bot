name: Workflow for Build and Deployment

on:
  workflow_dispatch:
    inputs:
      app_name:
        description: "Name of the Docker app"
        required: false
        default: "plane-tg-bot-app"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: "Set up Python"
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: "Lint code with flake8"
        run: |
          flake8 api.py bot.py main.py --max-line-length=88

  build-and-push:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: "Log in to GitHub Container Registry"
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Build and tag Docker image"
        run: |
          docker build -t ghcr.io/${{ github.repository }}/${{ github.event.inputs.app_name }}:latest .

      - name: "Push Docker image to GitHub Container Registry"
        run: |
          docker push ghcr.io/${{ github.repository }}/${{ github.event.inputs.app_name }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: "Deploy to Virtual Machine"
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          password: ${{ secrets.VM_PASSWORD }} # Or use an SSH private key instead
          script: |
            docker login ghcr.io -u ${{ secrets.GITHUB_ACTOR }} -p ${{ secrets.GITHUB_TOKEN }}
            docker pull ghcr.io/${{ github.repository }}/${{ github.event.inputs.app_name }}:latest
            docker stop ${{ github.event.inputs.app_name }} || true
            docker rm ${{ github.event.inputs.app_name }} || true
            docker run -d \
              --name ${{ github.event.inputs.app_name }} \
              -e ENV_VAR1=${{ secrets.ENV_VAR1 }} \
              -e ENV_VAR2=${{ secrets.ENV_VAR2 }} \
              -e ENV_VAR3=${{ secrets.ENV_VAR3 }} \
              -p 8000:8000 \
              ghcr.io/${{ github.repository }}/${{ github.event.inputs.app_name }}:latest
